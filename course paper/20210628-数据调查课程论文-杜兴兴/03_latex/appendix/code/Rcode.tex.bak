\chapter{Python代码}\label{codes}
\section{估计与检验}
\begin{verbatim}
library(VGAM)
library(stats4)
library(DMwR)
library(MASS)
###functions;

### -loglikelihood function of mTobit, three parameters;
llmt1 <-function(rho,sig,beta) {

  y=dat[,3];
  xmatrix=as.matrix(dat[-3]);

  pred=xmatrix %*% beta;
  predn=(cut-pred)/sig;

  likeli=(y<= cut)*(rho+(1-rho)*pnorm(predn))+(y>cut)*(1-rho)*dnorm((y-pred)/sig)/sig;
  ll=log(likeli);
  return(-sum(ll));
}


### -loglikelihood function of mTobit, one parameter vector;
llmt2 <-function(theta) {

  rho=theta[1];
  sig=theta[2];
  beta=theta[-c(1,2)];


  y=dat[,3];
  xmatrix=as.matrix(dat[-3]);

  pred=xmatrix %*% beta;
  predn=(cut-pred)/sig;

  llike=log((y <= cut)*(rho+(1-rho)*pnorm(predn))+(y>cut)*(1-rho)*dnorm((y-pred)/sig)/sig);
  return(-sum(llike));
}


### -loglikelihood function of mTobit, one parameter vector with the data;
llmt3 <-function(theta, y, x=NULL, cut) {
  rho=theta[1];
  sig=theta[2];
  beta=theta[-c(1,2)];

  if (is.null(x)){
    xmatrix=matrix(1,nrow=length(y),ncol=1);
  }else  {xmatrix=cbind(1,x);}

  pred=xmatrix %*% beta;
  predn=(cut-pred)/sig;

  llike=log((y <= cut)*(rho+(1-rho)*pnorm(predn))+(y>cut)*(1-rho)*dnorm((y-pred)/sig)/sig);
  return(-sum(llike));
}


##score test;
score=function(theta, outcome, x=NULL,  cut=0){
  n=length(outcome);
  test<-NULL;

  if (is.null(x))
  {cov=matrix(1,nrow=n,ncol=1);
  }else {
    cov=cbind(1,x);
  }

  ri=(outcome <= cut);
  sigma=theta[1];
  beta= theta[-1];
  p=length(beta);

  L=matrix(rep(1,n),ncol=1);


  J11=matrix(nrow=p,ncol=p);
  dj11=dj12=dj13=matrix(rep(0, n^2), nrow=n);

  K11=matrix(nrow=p,ncol=p);
  dk11=dk12=dk13=matrix(rep(0, n^2), nrow=n);

  L11=matrix(nrow=p,ncol=p);
  dU1=dU2=dU3=matrix(rep(0, n^2), nrow=n);

  mu= cov %*% beta;
  dcm=cut-mu;
  pp=pnorm((cut-mu)/sigma) ; ###the cumulative prob, corresponding B in the formula;

  d=dnorm((cut-mu)/sigma) ; ###density, corresponding A in the formula ####Wan's score test1;

  score1=rep(0,p);
  score2=0;
  score3=sum((ri-pp)/pp);
  score=c(score1, score2, score3);

  ###score test based on moment estimate of variance;
  diag(dU1)=(1-ri)*(outcome-mu)/sigma^2-ri*d/sigma/pp; ###score for beta;
  uWT1=t(cov)%*%dU1;
  uWT2=(1-ri)/sigma*(-1+(outcome-mu)^2/sigma^2) - ri*d/pp*dcm/sigma^2; ###score for sigma;
  uWT3 =(ri-pp)/pp;

  L11=uWT1%*%t(uWT1);
  L12=uWT1%*%uWT2;
  L13=uWT1%*%uWT3;

  L22=t(uWT2)%*%uWT2;
  L21=t(L12);
  L23=t(uWT2)%*%uWT3;

  L33=t(uWT3)%*%uWT3;
  L31=t(L13);
  L32=t(L23);
  LL=rbind(cbind(L11,L12,L13),cbind(L21,L22, L23),cbind(L31,L32,L33));

  if(det(LL)!=0 && solve(LL)[p+2,p+2]>=0){
    try(test$score<- as.numeric(score3^2*solve(LL)[p+2,p+2]));###chi-square test;
    try(test$scoreZ<-as.numeric( score3*sqrt(solve(LL)[p+2,p+2])));###z-score;
    try(test$Zero<- as.numeric(sum(ri-pp)/n));
  }

  if(det(LL)!=0 && solve(LL)[p+2,p+2]<0){
    test$score<-88888;
    test$scoreZ<-88888;
    test$Zero<-88888;
  }

  if(det(LL)==0){
    test$score<-99999;
    test$scoreZ<-99999;
    test$Zero<-99999;
  }
  return(test);
}


##snew test;
snew=function(theta, outcome, x=NULL,  cut=0){
  n=length(outcome);
  test<-NULL;

  if (is.null(x))
  {cov=matrix(1,nrow=n,ncol=1);
  }else {
    cov=cbind(1,x);
  }

  ri=(outcome <= cut);
  sigma=theta[1];
  beta= theta[-1];
  p=length(beta);

  L=matrix(rep(1,n),ncol=1);


  J11=matrix(nrow=p,ncol=p);
  dj11=dj12=dj13=matrix(rep(0, n^2), nrow=n);

  K11=matrix(nrow=p,ncol=p);
  dk11=dk12=dk13=matrix(rep(0, n^2), nrow=n);

  J11=matrix(nrow=p,ncol=p);
  dU1=dU2=dU3=dU4=matrix(rep(0, n^2), nrow=n);

  mu= cov %*% beta;
  dcm=cut-mu;
  pp=pnorm((cut-mu)/sigma) ; ###the cumulative prob, corresponding B in the formula;

  d=dnorm((cut-mu)/sigma) ; ###density, corresponding A in the formula;

  s=sum(ri-pp)/n

  ###snew test based on moment estimate of variance;
  diag(dU1)=(1-ri)*(outcome-mu)/sigma^2-ri*d/sigma/pp;###score for beta;
  uWT1=t(cov)%*%dU1;#pxn
  diag(dU2)=d/sigma;###score of s for beta;
  uWT12=d/sigma;#pxn
  uWT13=d*dcm/sigma^2;###score of s for sigma;#nx1
  uWT2=(1-ri)/sigma*(-1+(outcome-mu)^2/sigma^2) - ri*d/pp*dcm/sigma^2; ###score for sigma;
  uWT4=ri-pp;#nx1

  A11=-n;
  A12=t(uWT4)%*%t(uWT1);
  A13=t(uWT4)%*%uWT2;

  A21=matrix(rep(0,p),ncol=1);
  J11=uWT1%*%t(uWT1);
  J12=uWT1%*%uWT2;

  A31=0;
  J21=t(J12);
  J22=t(uWT2)%*%uWT2;

  AA=rbind(cbind(A11,-A12,-A13),cbind(A21,-J11, -J12),cbind(A31,-J21,-J22));
  A=AA/n

  diag(dU1)=(1-ri)*(outcome-mu)/sigma^2-ri*d/sigma/pp;#nxn
  uWT1=t(cov)%*%dU1;#pxn
  uWT4=ri-pp;#nx1
  uWT2=(1-ri)/sigma*(-1+(outcome-mu)^2/sigma^2) - ri*d/pp*dcm/sigma^2; ###score for sigma;nx1

  B11=t(uWT4)%*%uWT4;
  B12=t(uWT4)%*%t(uWT1);
  B13=t(uWT4)%*%uWT2;

  B22=uWT1%*%t(uWT1);
  B21=t(B12);
  B23=uWT1%*%uWT2;

  B33=t(uWT2)%*%uWT2;
  B31=t(B13);
  B32=t(B23)

  BB=rbind(cbind(B11,B12,B13),cbind(B21,B22, B23),cbind(B31,B32,B33));
  B=BB/n

  TT=solve(A)%*%B%*%t(solve(A))
  l=rbind(cbind(J11,J12),cbind(J21,J22));
  ll=rbind(cbind(B22, B23),cbind(B32,B33));


  if(det(A)!=0 && sqrt((TT)[1,1])>=0){
    try(test$sz<-as.numeric( sqrt(n)*s/sqrt((TT)[1,1])));###z-score;
  }

  if(det(A)!=0 && (TT)[1,1]<0){
    test$sz<-88888
  }

  if(det(A)==0){
    test$sz<-99999;
  }
  return(test);
}


#########################################################################
# CASE I:
# Tobit model without covariates
# No latent class
# calcuate the score test, likelihood ratio and wald test;
# mu: the mean of Tobit model
# mu: -1.5, -0.5,  0.5 and  1.5
# the proportion under limit: 0.5972 0.4059 0.2219 0.1059
# ns: sample size
# ns: 50, 100, 500, 1000;
# 1000 Monte Carlo replications;
###########################################################################
set.seed(2014)
cut=-1.0;
nsim=1000;
ns=c(50, 100, 200, 500, 1000);
mu=c(-1.5, -0.5,  0.5,   1.5, 2, 2.5, 3);

wald1=lr1=score1=scorez1=srho1=wrho1=var1=conv1=pv=spv
   =wa=swa=lr=slr=p=sp=sp1=array(dim=c(nsim, length(ns),length(mu)));

for(i in 1:length(mu)){
  for(j in 1:length(ns)){
    for(k in 1:nsim){

      yy=rnorm(ns[j], mu[i], 2);
      y=yy*(yy>cut)+cut*(yy<=cut);

      ####MLE of Tobit;
      est1<-try(fit1<-vglm(y ~ 1, family = tobit(Lower = cut)));

      ##exp(coefficients(fit1)[2] is the estiamted square-root of variance, i.e, sigma;
      theta1=c(exp(coefficients(fit1)[2]),coefficients(fit1)[-2]);

      ####score test;
      try(stest<-score(theta1, y, x=NULL, cut=-1.0));
      try(score1[k,j,i]<-stest$score);
      try(scorez1[k,j,i]<-stest$scoreZ);
      try(srho1[k,j,i]<-stest$Zero);

      ####MLE of mTobit using optim function;
      try(est2<-optim(c(0, theta1[1], theta1[-1]), llmt3, hessian=T,
          y=y, x=NULL, cut=cut,control=list(fnscale=1,maxit=10000)));

      ####Wald test and LR test;
      conv1[k,j,i]=est2$convergence;
      rho_hat=est2$par[1];
      wrho1[k,j,i]=rho_hat;

      if(det(est2$hessian)!=0){
        Inv=solve(est2$hessian, tol=1e-40);
        var_hat=diag(Inv)[1];
        var1[k,j,i]=var_hat;
        try(wald1[k,j,i]<-rho_hat/sqrt(var_hat));
        try(lr1[k,j,i]<-2*(-est2$value-logLik(fit1)));
      }
      ####snew test;
      try(stest<-snew(theta1, y, x=NULL, cut=-1.0));
      try(sp1[k,j,i]<-stest$sz);

      print(paste("current simulation:",mu[i], ns[j], k));

      remove(stest);
    }
  }
}

save.image("TypeI_mod1.RData");



#########################################################################
# CASE II:
# Tobit model with covariate x from uniform distribution
# No latent class
# calcuate the score test, likelihood ratio and wald test;
# aa: the intercept of mu function (mu=aa-x)
# aa=c(-1, 0, 1, 2, 3, 4, 5)
# the proportions under limit are about 0.59914 0.40121 0.22988 0.10657
# ns: sample size
# sample size 50, 100, 500, 1000;
# 1000 Monte Carlo replications;
###########################################################################
set.seed(2014)
cut=-1.0;
nsim=1000;
ns=c(50, 100, 200,500, 1000);
aa=c(-1, 0, 1, 2, 2.5, 3, 3.5);

wald2=lr2=score2=scorez2=srho2=wrho2=var2=conv2=pv2
  =spv2=wa2=swa2=lr2=slr2=p2=sp2=sp22=array(dim=c(nsim, length(ns),length(aa)));

for(i in 1:length(aa)){
  for(j in 1:length(ns)){
    for(k in 1:nsim){

      x=runif(ns[j]);
      mu= (aa[i]-x);

      yy=rnorm(ns[j], mu, 2);
      y=yy*(yy>cut)+cut*(yy<=cut);

      ####MLE of Tobit;
      est1<-try(fit1<-vglm(y ~ x, family = tobit(Lower = cut)));

      ##exp(coefficients(fit1)[2] is the estiamted square-root of variance, i.e, sigma;
      theta1=c(exp(coefficients(fit1)[2]),coefficients(fit1)[-2]);

      ####score test;
      try(stest<-score(theta1, y, x, cut=-1.0));
      try(score2[k,j,i]<-stest$score);
      try(scorez2[k,j,i]<-stest$scoreZ);
      try(srho2[k,j,i]<-stest$Zero);

      ####snew test;
      try(stest<-snew(theta1, y, x, cut=-1.0));
      try(sp2[k,j,i]<-stest$sz);
      ####MLE of mTobit using optim function;
      try(est2<-optim(c(0, theta1[1], theta1[-1]), llmt3, hessian=T,
         y=y, x=x, cut=cut,control=list(fnscale=1,maxit=10000)));

      ####Wald test and LR test;
      conv2[k,j,i]=est2$convergence;
      rho_hat=est2$par[1];
      wrho2[k,j,i]=rho_hat;

      if(det(est2$hessian)!=0){
        Inv=solve(est2$hessian, tol=1e-40);
        var_hat=diag(Inv)[1];
        var2[k,j,i]=var_hat;
        try(wald2[k,j,i]<-rho_hat/sqrt(var_hat));
        try(lr2[k,j,i]<-2*(-est2$value-logLik(fit1)));
      }

      print(paste("current simulation:",aa[i], ns[j], k));

      remove(stest);
    }
  }
}
save.image("TypeI_mod2.RData");


#########################################################################
# CASE III:
# Tobit model with covariate x from normal distribution
# No latent class
# calcuate the score test, likelihood ratio and wald test;
# aa: the intercept of mu function (mu=aa-x)
# aa=c(-1.5,  -0.5,  0.5, 1.5)
# the proportions under limit are about 0.59059 0.41047 0.25340 0.13359
# ns: sample size
# sample size 50, 100, 500, 1000;
# 1000 Monte Carlo replications;
###########################################################################
set.seed(2014)
cut=-1.0;
nsim=1000;
ns=c(50, 100, 200,500, 1000);
aa=c(-1.5, -0.5,  0.5,   1.5, 2.5, 3, 3.5);

wald3=lr3=score3=scorez3=srho3=wrho3=var3
  =conv3=pv3=spv3=wa3=swa3=lr3=slr3=p3=sp33=sp3=array(dim=c(nsim, length(ns),length(aa)));

for(i in 1:length(aa)){
  for(j in 1:length(ns)){
    for(k in 1:nsim){

      x=rnorm(ns[j]);
      mu= (aa[i]-x);

      yy=rnorm(ns[j], mu, 2);
      y=yy*(yy>cut)+cut*(yy<=cut);

      ####MLE of Tobit;
      est1<-try(fit1<-vglm(y ~ x, family = tobit(Lower = cut)));

      ##exp(coefficients(fit1)[2] is the estiamted square-root of variance, i.e, sigma;
      theta1=c(exp(coefficients(fit1)[2]),coefficients(fit1)[-2]);

      ####score test;
      try(stest<-score(theta1, y, x, cut=-1.0));
      try(score3[k,j,i]<-stest$score);
      try(scorez3[k,j,i]<-stest$scoreZ);
      try(srho3[k,j,i]<-stest$Zero);

      ####MLE of mTobit using optim function;
      try(est2<-optim(c(0, theta1[1], theta1[-1]), llmt3, hessian=T, y=y, x=x,
          cut=cut,control=list(fnscale=1,maxit=10000)));

      ####Wald test and LR test;
      conv3[k,j,i]=est2$convergence;
      rho_hat=est2$par[1];
      wrho3[k,j,i]=rho_hat;

      if(det(est2$hessian)!=0){
        Inv=solve(est2$hessian, tol=1e-40);
        var_hat=diag(Inv)[1];
        var3[k,j,i]=var_hat;
        try(wald3[k,j,i]<-rho_hat/sqrt(var_hat));
        try(lr3[k,j,i]<-2*(-est2$value-logLik(fit1)));
      }

      ####snew test;
      try(stest<-snew(theta1, y, x, cut=-1.0));
      try(sp3[k,j,i]<-stest$sz);


      print(paste("current simulation:",aa[i], ns[j], k));

      remove(stest);
    }
  }
}
save.image("TypeI_mod3.RData")
\end{verbatim}



\section{QQ图比较}
\begin{verbatim}
pw1<-1-pnorm(wald1);
pl1<-(1-pchisq(lr1, df=1))/2;
ps1<-1-pnorm(scorez1);
pn1<-1-pnorm(sp1);

pdf("QQ_const_mod1.pdf")

### only plot QQplot for mu=c(-1.5, -0.5,  0.5, 1.5);
## mu=c(-1.5, -0.5,  0.5, 1.5, 2, 2.5, 3);

pw=pw1;
pl=pl1;
ps=ps1;
pn=pn1;

op <- par(mfrow = c(5,4),
          oma = c(7,4,2,0) + 0.1,
          mar = c(0,0,1,1) + 0.1, cex.lab=1.3)

################################
# k for the different means
# first row
#############################
mu=c(-1.5, -0.5,  0.5, 1.5,2);

k=1;
pnn=pn[,5,k];
pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',type="l",xlab="",
   ylab="",ylim=c(0,1), xlim=c(0,1), lty=1,col=1)
title( "New Test",line = .4)
for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));

pss=ps[,5,k];pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',yaxt='n',type="l",
   xlab="",ylab="",ylim=c(0,1), xlim=c(0,1), lty=1,col=1)
title( "Score Test",line = .4)
for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,xaxt='n',
   yaxt='n',type="l",xlab="",ylab="", ylim=c(0,1), xlim=c(0,1), lty=1,col=1)
title( "Wald Test",line = .4)
for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
}
text(0.85,.25, bquote(mu == .(mu[k])));


pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,xaxt='n',
     yaxt='n',type="l",xlab="",ylab="",  lty=1,col=1)
title( "LR Test",line = .4)
for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])))


############
# 2-4 row
##############
for(k in 2:4){
  pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
  plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',
     type="l",ann=FALSE,ylim=c(0,1), xlim=c(0,1), lty=1,col=1)

  for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
  lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(mu == .(mu[k])));

  pss=ps[,5,k];pss=pss[!is.na(pss)];
  plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',
     yaxt='n',type="l",ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

  for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
  lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(mu == .(mu[k])));


  pww=pw[,5,k];pww=pww[!is.na(pww)];
  plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,xaxt='n',yaxt='n',
      type="l",ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

  for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
  lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(mu == .(mu[k])));

  pll=pl[,5,k];pll=pll[!is.na(pll)];
  plot( ((1:length(pll))-.5)/length(pll),sort(pll),
    xaxt='n',yaxt='n',type="l",ann=FALSE, lty=1,col=1)

  for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
  lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(mu == .(mu[k])));
}

############
# 5th row
##############
k=5;
pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn), type="l",ann=FALSE,
  ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));

pss=ps[,5,k];pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss), yaxt='n',type="l",
   ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,yaxt='n',type="l",
   ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));

pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,
   yaxt='n', type="l",ann=FALSE, lty=1,col=1)

for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(mu == .(mu[k])));


title(xlab = "Empirical type I errors ", ylab = "Theoretical p-values ",
  outer = TRUE, line = 2.7,cex.lab=1.5 )


par(xpd=NA)
legend(-2.55,-.3,legend=c("50", "100", "200","500", "1000"),
   lty = c(2,3,4,5,1), col=c(2,3,4,5, 1), horiz = TRUE)

par(op);

dev.off()




################################################
lr2[conv2>0]=NA;
wrho2[conv2>0]=NA;

pw2<-1-pnorm(wald2);
pl2<-(1-pchisq(lr2, df=1))/2;
ps2<-1-pnorm(scorez2);
pn2<-1-pnorm(sp2);

pdf("QQ_unif_mod2.pdf")


### only plot QQplot for aa=c(-1.0, 0.0, 1.0, 2.0);
## aa=c(-1, 0, 1, 2, 2.5, 3, 3.5);
pw=pw2;
pl=pl2;
ps=ps2;
pn=pn2;

op <- par(mfrow = c(5,4),
          oma = c(7,4,2,0) + 0.1,
          mar = c(0,0,1,1) + 0.1, cex.lab=1.3)

################################
# k for the different means
# first row
#############################
aa=c(-1, 0, 1, 2, 2.5);


k=1;
pnn=pn[,5,k];
pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',type="l",
  xlab="",ylab="",ylim=c(0,1), xlim=c(0,1), lty=1,col=1)
title( "New Test",line = .4)
for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pss=ps[,5,k];
pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',yaxt='n',type="l",
  xlab="",ylab="",ylim=c(0,1), xlim=c(0,1),lty=1, col=1)
title( "Score Test",line = .4)
for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,xaxt='n',yaxt='n',type="l",
  xlab="",ylab="",ylim=c(0,1), xlim=c(0,1),lty=1, col=1)
title( "Wald Test",line = .4)
for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
}
text(0.85,.25, bquote(alpha == .(aa[k])));


pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,xaxt='n',yaxt='n',
  type="l",xlab="",ylab="",lty=1, col=1)
title( "LR Test",line = .4)
for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

############
# 2-4 row
##############
for(k in 2:4){

  pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
  plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',type="l",
    ann=FALSE,ylim=c(0,1), xlim=c(0,1), lty=1,col=1)

  for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
  lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pss=ps[,5,k];pss=pss[!is.na(pss)];
  plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',yaxt='n',type="l",
    ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

  for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
  lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pww=pw[,5,k];pww=pww[!is.na(pww)];
  plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,
   xaxt='n',yaxt='n',type="l",ann=FALSE,lty=1, col=1)

  for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
  lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pll=pl[,5,k];pll=pll[!is.na(pll)];
  plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,
    xaxt='n',yaxt='n',type="l",ann=FALSE,lty=1, col=1)

  for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
  lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));
}


############
# 5th row
##############
k=5;
pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn), type="l",
  ann=FALSE,ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pss=ps[,5,k];pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss), yaxt='n',
  type="l",ann=FALSE, lty=1,col=1)

for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,yaxt='n',type="l",ann=FALSE, lty=1,col=1)

for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,yaxt='n', type="l",ann=FALSE,lty=1,col=1)

for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

title(xlab = "Empirical type I errors ", ylab = "Theoretical p-values ",
outer = TRUE, line = 2.7,cex.lab=1.5 )

par(xpd=NA)
legend(-2.55,-.3,legend=c("50", "100", "200","500", "1000"),
 lty = c(2,3,4,5,1), col=c(2,3,4,5, 1), horiz = TRUE)


par(op)

dev.off()



#########################################################

lr3[conv3>0]=NA;
wrho3[conv3>0]=NA;

### calculate the p value for one-sided test;
pw1<-1-pnorm(wald3);
pl1<-(1-pchisq(lr3, df=1))/2;
ps1<-1-pnorm(scorez3);
pn1<-1-pnorm(sp3);

###QQplot

pdf("QQ_normal_mod3.pdf")




### only plot QQplot for aa=c(-1.0, 0.0, 1.0, 2.0);
## aa=c(-1.5, -0.5,  0.5,   1.5,  2.5, 3, 3.5);

pw=pw1;
pl=pl1;
ps=ps1;
pn=pn1;

op <- par(mfrow = c(5,4),
          oma = c(7,4,2,0) + 0.1,
          mar = c(0,0,1,1) + 0.1, cex.lab=1.3)

################################
# k for the different means
# first row
#############################
aa=c(-1.5, -0.5,  0.5, 1.5,  2.5);


k=1;
pnn=pn[,5,k];
pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',type="l",
 xlab="",ylab="",ylim=c(0,1), xlim=c(0,1), lty=1,col=1)
title( "New Test",line = .4)
for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pss=ps[,5,k];
pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',yaxt='n',
 type="l",xlab="",ylab="",ylim=c(0,1), xlim=c(0,1),lty=1, col=1)
title( "Score Test",line = .4)
for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,xaxt='n',yaxt='n',type="l",
  xlab="",ylab="",ylim=c(0,1), xlim=c(0,1),lty=1, col=1)
title( "Wald Test",line = .4)
for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
}
text(0.85,.25, bquote(alpha == .(aa[k])));


pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,xaxt='n',yaxt='n',
 type="l",xlab="",ylab="",lty=1, col=1)
title( "LR Test",line = .4)
for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

############
# 2-4 row
##############
for(k in 2:4){
  pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
  plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn),xaxt='n',type="l",
   ann=FALSE,ylim=c(0,1), xlim=c(0,1), lty=1,col=1)

  for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
  lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pss=ps[,5,k];pss=pss[!is.na(pss)];
  plot( ((1:length(pss))-.5)/length(pss),sort(pss),xaxt='n',
  yaxt='n',type="l",ann=FALSE,lty=1, col=1)

  for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
  lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,
  lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pww=pw[,5,k];pww=pww[!is.na(pww)];
  plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,xaxt='n',yaxt='n',
  type="l",ann=FALSE,lty=1, col=1)

  for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
  lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));

  pll=pl[,5,k];pll=pll[!is.na(pll)];
  plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,xaxt='n',
  yaxt='n',type="l",ann=FALSE,lty=1, col=1)

  for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
  lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1, col=kk+1)
  }
  text(0.85,.1, bquote(alpha == .(aa[k])));
}


############
# 5th row
##############
k=5;
pnn=pn[,5,k];pnn=pnn[!is.na(pnn)];
plot( ((1:length(pnn))-.5)/length(pnn),sort(pnn), type="l",ann=FALSE,
ylim=c(0,1), xlim=c(0,1),lty=1,col=1)

for (kk in 1:4){pnn=pn[,kk,k];pnn=pnn[!is.na(pnn)];
lines( ((1:length(pnn))-.5)/length(pnn),sort(pnn) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pss=ps[,5,k];pss=pss[!is.na(pss)];
plot( ((1:length(pss))-.5)/length(pss),sort(pss), yaxt='n',
type="l",ann=FALSE, lty=1,col=1)

for (kk in 1:4){pss=ps[,kk,k];pss=pss[!is.na(pss)];
lines( ((1:length(pss))-.5)/length(pss),sort(pss) ,lty=kk+1, col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pww=pw[,5,k];pww=pww[!is.na(pww)];
plot( ((1:length(pww))-.5)/length(pww),sort(pww) ,yaxt='n',
type="l",ann=FALSE, lty=1,col=1)

for (kk in 1:4){pww=pw[,kk,k];pww=pww[!is.na(pww)];
lines( ((1:length(pww))-.5)/length(pww),sort(pww) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

pll=pl[,5,k];pll=pll[!is.na(pll)];
plot( ((1:length(pll))-.5)/length(pll),sort(pll) ,yaxt='n',
type="l",ann=FALSE,lty=1,col=1)

for (kk in 1:4){pll=pl[,kk,k];pll=pll[!is.na(pll)];
lines( ((1:length(pll))-.5)/length(pll),sort(pll) ,lty=kk+1,col=kk+1)
}
text(0.85,.1, bquote(alpha == .(aa[k])));

title(xlab = "Empirical type I errors ", ylab = "Theoretical p-values ",
outer = TRUE, line = 2.7,cex.lab=1.5 )

par(xpd=NA)
legend(-2.55,-.3,legend=c("50", "100", "200","500", "1000"),
lty = c(2,3,4,5,1), col=c(2,3,4,5, 1), horiz = TRUE)
par(op)
dev.off()
\end{verbatim}


